/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package huffmancodinglabterminal.GUIFrame;
//Screen 5
import huffmancodinglabterminal.*;
import java.io.ObjectOutputStream;
import java.math.BigInteger;
import java.net.Socket;
import javax.swing.JOptionPane;
import huffmancodinglabterminal.SocketProgramming;
import java.awt.HeadlessException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author Madaar129c
 */
public class Main extends javax.swing.JFrame {

    CharactersFrequencyCount count;
    
    PiorityQueue pq;
    Huffman hf;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        // when Main Screen Start Create a Thread For Receiver to listen 
        //Whenever Message Received
         Recieve ob1 = new Recieve();
        ob1.start();
    }
 class Recieve extends Thread
{
    ServerSocket ss;
    @Override
    public void run()
    {
        while (true)
        {
            try
            {
                this.ss = new ServerSocket(1256);
                Socket s = ss.accept();
                ObjectInputStream inObj = new ObjectInputStream(s.getInputStream());
                // Read The Huffman Chart from sender
                String [][]chart = (String[][])inObj.readObject();
                //Read Encode Big Integer Data
                BigInteger encodedData = (BigInteger)inObj.readObject();
                //Read Length of String for Corect decodeing of Big Integer Data
                String encodedDataLengthStr=inObj.readUTF();
                int encodedDataLength = Integer.parseInt(encodedDataLengthStr);
                //Convert Big Integer to String By not removing the leading 0
                String encodedDataString=String.format("%0"+encodedDataLength+"d",encodedData);
                // Decode The encode Data By use of Huffmsn Chart
                EncodeDecode ed = new EncodeDecode();
                String msg = ed.decodeData(chart,encodedDataString);
                
                // Print IP Address
                System.out.println("ip address");
                System.out.println(s.getInetAddress());
                //Print Chart
                System.out.println("chart");
                for(int i=0;i<chart.length;i++){
                    for(int j=0;j<chart[i].length;j++){
                        System.out.print(chart[i][j]+" ");
                    }
                    System.out.println("\b\b");
                }
                //Print the Encoded Data String Length
                System.out.println("length "+encodedDataLengthStr+" integer "+encodedDataLength);
                //Print Encoded String
                System.out.println("Encoded");
                System.out.println(encodedDataString);
                
                //Print Decoded Message
                System.out.println("msg");
                System.out.println(msg);
                /*Display the Message to Chat Screen By appendit with Ip address of Sender and 
                messsage sent by Sender*/
                txtMain.setText(txtMain.getText() +"Recieve Message from "+s.getInetAddress()+" :\n" +  msg + "\n");
                inObj.close(); 
                s.close();
                ss.close();
            } catch (IOException ex)
            {
                ex.getMessage();
            }
            catch (ClassNotFoundException ex)
            {
                Logger.getLogger(Recieve.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblEnter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnEncode = new javax.swing.JButton();
        btnViewTable = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMain = new javax.swing.JTextArea();
        txtIp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEnter.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        lblEnter.setText("Enter text");

        txtMessage.setColumns(20);
        txtMessage.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        txtMessage.setRows(1);
        jScrollPane1.setViewportView(txtMessage);

        btnEncode.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnEncode.setText("Send");
        btnEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncodeActionPerformed(evt);
            }
        });

        btnViewTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnViewTable.setText("View Table");
        btnViewTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTableActionPerformed(evt);
            }
        });

        txtMain.setColumns(20);
        txtMain.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        txtMain.setRows(5);
        jScrollPane2.setViewportView(txtMain);

        txtIp.setText("127.0.0.1");

        jLabel1.setText("IP: Address");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(btnEncode))
                            .addComponent(btnViewTable, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblEnter)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEnter)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnViewTable)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEncode)
                            .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncodeActionPerformed
        /*
        function use to generete chart of huffman encode it and send it to receiver
        */
        // Generate Huffman Chart
        generateTree();
        
        if(count == null) {
            return;
        }
        try{
            // Get Ip Address from the GUI
            String ip = txtIp.getText();
            // if Ip Address is empty show Dailog box to insert Ip Address
            if(ip.equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter ip address");
                return;
            }
            Socket s = new Socket(ip, 1256);
            ObjectOutputStream outObj = new ObjectOutputStream(s.getOutputStream());
            //Encoded the Message by use of Chart
            EncodeDecode ed = new EncodeDecode();
            String encodedDataString=ed.encodeData(hf.chart,txtMessage.getText());
            //Convert Encoded Data String into Big Integer
            BigInteger encodedData =new BigInteger(encodedDataString);
            //Send Huffman Chart
            outObj.writeObject(hf.chart);
            //Send Big Integer EncodeData
            outObj.writeObject(encodedData);
            /* Send The Length of Encode Data String As Big Integer Not 
                represent the leading zero and wrong Decoded of data 
                at receiver sude so length is used at receiver side for Correct decoding
            */
            outObj.writeUTF(Integer.toString(encodedDataString.length()));
            // Print the Sending Material to display
            System.out.println("length of encoded string is "+encodedDataString.length()+" ");
            System.out.println("data string");
            System.out.println(encodedDataString);
            System.out.println("data");
            System.out.println(encodedData);
            
//            outObj.writeChars(ip);
            outObj.close();
            s.close();
            /*Set the Main Chat Screen By append it with Ip address of Receiver and 
            messsage sent to receiver
            */
            txtMain.setText(txtMain.getText() + "Send Message to "+ip+" :\n" + txtMessage.getText()+"\n");
            txtMessage.setText("");
        }
        catch (HeadlessException | IOException ex)
        {
          ex.getMessage();
        }
        
    }//GEN-LAST:event_btnEncodeActionPerformed
// Get the Message from Gui and Create a Huffman Tree from it
    private void generateTree() {
        // Get a Message from Gui and store it in Message variable
        String message = txtMessage.getText();
        // if message length is zero Generate a Dailog box to Enter text
        if(message.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter some Text", "Message", JOptionPane.WARNING_MESSAGE);
            return;
        }
        /*Create instance of CharactersFrequencyCount and generate the frequency of
        each character in string by creating Binary tree technique
        */
        count = new CharactersFrequencyCount();
        count.countCharacters(message);
        /*
            Create instance of Piority Queue with size of Array in PQ is same the size of Binary tree
            and +1 is because PQ Array start from 1 and 0 is unintiallize so size is one more 
            then Binary tree size and then use pre-order traversal of binary tree to 
            add each node of binary tree to piority queue
        */
        pq = new PiorityQueue(count.length()+1);
        pq.generatePQFromBT(count.rootBT);
        
        /*
        Create instance of Huffman Chart Array row size same as PQ array size and column is 3 
        0 for character 1 for frequecy and 2 for code of that character
        Then generate the huffman tree from piority Queue
        Generate the chart from the tree and display chart
        */
        hf = new Huffman(pq.length());
        hf.generateHuffmanTree(pq);
        hf.generateChart(hf.huffmanTreeRoot, "");
        hf.displayArray(hf.chart);
    }
    
    private void btnViewTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTableActionPerformed
        generateTree();
        if(count == null) {
            return;
        }
        Table t = new Table();
        t.generateTable(hf);
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnViewTableActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncode;
    private javax.swing.JButton btnViewTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEnter;
    private javax.swing.JTextField txtIp;
    private javax.swing.JTextArea txtMain;
    private javax.swing.JTextArea txtMessage;
    // End of variables declaration//GEN-END:variables
}
